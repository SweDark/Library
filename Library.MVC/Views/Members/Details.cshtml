@model Library.MVC.Models.MemberDetailsVm;

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Member</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
    </dl>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Loan date</th>
            <th>Book Title</th>
            <th>Author</th>
            <th>Return date</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Loans)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LoanDate)
            </td>
            <td>
                <a asp-controller="Books" asp-action="Details" asp-route-id="@item.bookCopy.Details.ID">@Html.DisplayFor(modelItem => item.bookCopy.Details.Title)</a>

            </td>
            <td>
                <a asp-controller="Authors" asp-action="Details" asp-route-id="@item.bookCopy.Details.AuthorID">@Html.DisplayFor(modelItem => item.bookCopy.Details.Author.Name)</a>
            </td>
            <td>
                @if (item.Returned == false)
                {
                    int loandays = ((TimeSpan)(Model.CurrentDate - item.LoanDate)).Days;
                    if (loandays > 14)
                    {
                        <dd class="col-sm-10">
                            <p class="text-danger">Not yet returned - Overdue</p>
                        </dd>
                    }
                    else
                    {
                        <dd class="col-sm-10">
                            <p class="text-warning">Not yet Returned</p>
                        </dd>
                    }
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.ReturnDate)
                }
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
            </td>
        </tr>
        }
    </tbody>
</table>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
